#include <stdio.h>
#include <conio.h>
#include <malloc.h>
struct node
{
	int data;
	struct node*link;
};
struct node*front;
struct node*rear;

void insert(){
	int n;
	printf("Enter the number you want to insert\n");
	scanf("%d",&n);
	struct node*temp;
	temp=(struct node*)malloc(sizeof(struct node));
	temp->data=n;
	if(front==NULL && rear==NULL){
		front=temp;
		rear=temp;
		rear->link=front;
		
	}
	else
	{
		temp->link=front;
		rear->link=temp;
		rear=temp;
	}
}

void del(){
	struct node *temp;
	if(front==NULL &&rear==NULL){
		printf("\nQueue is empty\n");
		return;
	}
	else if(front==rear){
		free (front);
		front=NULL;
		rear=NULL;
	}
	else{
		temp=front;
		front=front->link;
		rear->link=front;
		free (temp);
	}
}
void display()
{
	struct node *temp;
    if (front == NULL && rear == NULL)
    {
    	printf("Queue is empty.");
    }
    else if (front == rear)
    {
        printf("%d", front -> data);
    }
    else
    {
        temp = front;
        printf("");
        while (temp -> link != front)
        {
            printf("%d\t", temp -> data);
            temp = temp -> link;
        }
        printf("%d\t", temp -> data);
        printf("");
	}
	
}


main()
{
	int ch;
    while (1)
    {
        printf("\n1.Insert operation\n");
        printf("2.Delete Operation\n");
        printf("3.Display the Queue\n");
        printf("4.Exit\n");
        printf("Enter your choice of operations : ");
        scanf("%d", &ch);
        switch (ch)
        {
            case 1:
            insert();
            break;
            case 2:
            del();
            break;
            case 3:
            display();
            break;
            case 4:
            return 0;
            default:
            printf("Incorrect choice \n");
        } 
    } 

}


LEKFM EW'OKCXW;LC WA'CL;.
